<?php

/**
 * Implementation of hook_requirements()
 *
 * Check whether the sql server has the OQGRAPH engine.
 */
function friendlist_graph_requirements($phase) {
  // Create a status array that can be returned.
  //
  $status = array(
    'title' => t('OQGRAPH Engine'),
    'description' => t('The OQGRAPH MySQL storage engine is not available on your SQL server.'),
    'severity' => REQUIREMENT_ERROR,
  );

  // Query the server for all available engines and check if OQGRAPH is in the list.
  //
  $result = db_query("SHOW STORAGE ENGINES");
  while ($engine = db_fetch_array($result)) {
    if ($engine['Engine'] == 'OQGRAPH') {
      $status['description'] = t('The OQGRAPH MySQL storage engine is available on your server.');
      $status['severity'] = ($phase == 'install') ? REQUIREMENT_OK : REQUIREMENT_INFO;
    }
  }
  return $status;
}

/**
 * Implementation of hook_install()
 *
 * Create the friendlist graph table and transpose data.
 *
 * Since the Schema API doesn't allow specific storage engines, we can't just
 * use hook_schema to do this :-(
 */
function friendlist_graph_install() {
  // drupal_install_schema('friendlist_graph');

  $query = "CREATE TABLE {friendlist_graph} (
    latch   SMALLINT  UNSIGNED NULL,
    origid  BIGINT    UNSIGNED NULL,
    destid  BIGINT    UNSIGNED NULL,
    weight  DOUBLE    NULL,
    seq     BIGINT    UNSIGNED NULL,
    linkid  BIGINT    UNSIGNED NULL,
    KEY (latch, origid, destid) USING HASH,
    KEY (latch, destid, origid) USING HASH
  ) ENGINE=OQGRAPH";

  db_query($query);
}

/**
 * Implementation of hook_uninstall()
 */
function friendlist_graph_uninstall() {
  $ret = array();
  db_drop_table($ret, 'friendlist_graph');
  return $ret;
}

/**
 * There is some fail. Can't specify an engine in the schema.
 *
function friendlist_graph_schema() {
  $schema = array();

  $schema['friendlist_graph'] = array(
    'description' => 'An in-memory table used by the graph module.',
    'fields' => array(
      'latch' => array(
        'description' => 'Internal use only.',
        'type' => 'int',
        'size' => 'small',
      ),
      'origid' => array(
        'description' => 'References a {friendlist_statuses}.requester_id',
        'type' => 'int',
        'size' => 'big',
      ),
      'destid' => array(
        'description' => 'References a {friendlist_statuses}.requestee_id',
        'type' => 'int',
        'size' => 'big',
      ),
      'weight' => array(
        'description' => 'Optional link weighting. Defaults to 1.',
        'type' => 'float',
        'size' => 'big',
      ),
      'seq' => array(
        'description' => 'Internal use only.',
        'type' => 'int',
        'size' => 'big',
      ),
      'linkid' => array(
        'description' => 'Internal use only.',
        'type' => 'int',
        'size' => 'big',
      ),
    ),
    'indexes' => array(
      'latch_origid_destid' => array('latch', 'origid', 'destid'),
      'latch_destid_orig' => array('latch', 'destid', 'origid')
    ),
  );

  return $schema;
}
*/
